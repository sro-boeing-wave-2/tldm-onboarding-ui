swagger: '2.0'
info:
    version: v1
    title: 'My API'
paths:
    /api/Onboarding/create/workspace/email:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingCreateWorkspaceEmailPost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: user, in: body, required: false, schema: {$ref: '#/definitions/LoginViewModel'}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/create/workspace/verify:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingCreateWorkspaceVerifyPost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: otp, in: body, required: false, schema: {type: string}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/invite:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingInvitePost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: user, in: body, required: false, schema: {$ref: '#/definitions/LoginViewModel'}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/create/workspace:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingCreateWorkspacePost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: workspace, in: body, required: false, schema: {$ref: '#/definitions/Workspace'}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/personaldetails:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingPersonaldetailsPost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: user, in: body, required: false, schema: {$ref: '#/definitions/UserAccount'}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/login:
        post:
            tags: [Onboarding]
            operationId: ApiOnboardingLoginPost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: login, in: body, required: false, schema: {$ref: '#/definitions/LoginViewModel'}}]
            responses: {'200': {description: Success}}
    /api/Onboarding/workspacedetails:
        put:
            tags: [Onboarding]
            operationId: ApiOnboardingWorkspacedetailsPut
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: space, in: body, required: false, schema: {$ref: '#/definitions/Workspace'}}]
            responses: {'200': {description: Success}}
    '/api/Onboarding/{value}':
        get:
            tags: [Onboarding]
            operationId: ApiOnboardingByValueGet
            consumes: []
            produces: []
            parameters: [{name: value, in: path, required: true, type: string}]
            responses: {'200': {description: Success}}
    /api/Values:
        get:
            tags: [Values]
            operationId: ApiValuesGet
            consumes: []
            produces: [text/plain, application/json, text/json]
            parameters: []
            responses: {'200': {description: Success, schema: {uniqueItems: false, type: array, items: {type: string}}}}
        post:
            tags: [Values]
            operationId: ApiValuesPost
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: value, in: body, required: false, schema: {type: string}}]
            responses: {'200': {description: Success}}
    '/api/Values/{id}':
        get:
            tags: [Values]
            operationId: ApiValuesByIdGet
            consumes: []
            produces: [text/plain, application/json, text/json]
            parameters: [{name: id, in: path, required: true, type: integer, format: int32}]
            responses: {'200': {description: Success, schema: {type: string}}}
        put:
            tags: [Values]
            operationId: ApiValuesByIdPut
            consumes: [application/json-patch+json, application/json, text/json, 'application/*+json']
            produces: []
            parameters: [{name: id, in: path, required: true, type: integer, format: int32}, {name: value, in: body, required: false, schema: {type: string}}]
            responses: {'200': {description: Success}}
        delete:
            tags: [Values]
            operationId: ApiValuesByIdDelete
            consumes: []
            produces: []
            parameters: [{name: id, in: path, required: true, type: integer, format: int32}]
            responses: {'200': {description: Success}}
definitions:
    LoginViewModel:
        type: object
        properties:
            emailId: {type: string}
            password: {type: string}
            workspace: {type: string}
    Workspace:
        type: object
        properties:
            id: {format: int32, type: integer}
            workspaceName: {type: string}
            pictureUrl: {type: string}
            channels: {uniqueItems: false, type: array, items: {$ref: '#/definitions/Channel'}}
            usersState: {uniqueItems: false, type: array, items: {$ref: '#/definitions/UserState'}}
            userWorkspaces: {uniqueItems: false, type: array, items: {$ref: '#/definitions/UserWorkspace'}}
    Channel:
        type: object
        properties:
            id: {format: int32, type: integer}
            channelName: {type: string}
    UserState:
        type: object
        properties:
            id: {format: int32, type: integer}
            emailId: {type: string}
            isJoined: {type: boolean}
            otp: {type: string}
    UserWorkspace:
        type: object
        properties:
            userId: {format: int32, type: integer}
            userAccount: {$ref: '#/definitions/UserAccount'}
            workspaceId: {format: int32, type: integer}
            workspace: {$ref: '#/definitions/Workspace'}
    UserAccount:
        type: object
        properties:
            id: {format: int32, type: integer}
            firstName: {type: string}
            lastName: {type: string}
            emailId: {type: string}
            password: {type: string}
            isVerified: {type: boolean}
            workspaces: {uniqueItems: false, type: array, items: {$ref: '#/definitions/WorkspaceName'}}
            userWorkspaces: {uniqueItems: false, type: array, items: {$ref: '#/definitions/UserWorkspace'}}
    WorkspaceName:
        type: object
        properties:
            id: {format: int32, type: integer}
            name: {type: string}



